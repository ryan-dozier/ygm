name: CI Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ 'feature/**', 'hotfix/**']

env:
  BUILD_TYPE: Release

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
        gcc-version: [8, 9, 10]
        mpi-type: [mpich, openmpi]
        exclude:
          - os: ubuntu-latest
            gcc-version: 8
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache boost
        uses: actions/cache@v3
        id: cache-boost
        with:
          path: "~/boost_1_77_0"
          key: ${{ runner.os }}-libboost1.77
      - name: Install boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget --no-verbose https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.bz2
          tar -xjf boost_1_77_0.tar.bz2
      - name: Install Apache Arrow
        run: |
          cd ~
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get install ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get update
          sudo apt-get install libarrow-dev libparquet-dev
      - name: Install mpich
        if: matrix.mpi-type == 'mpich'
        run: sudo apt-get install mpich
      - name: Install OpenMPI
        if: matrix.mpi-type == 'openmpi'
        run: sudo apt-get install openmpi-bin libopenmpi-dev
      - name: Install GCC-${{ matrix.gcc-version }}
        if: matrix.gcc-version == '8'
        run: sudo apt-get install gcc-8 g++-8
      - name: Make
        run: |
          echo Run 'make'
          mpicc -show
          g++-${{ matrix.gcc-version }} --version
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_CXX_COMPILER=g++-${{ matrix.gcc-version }} -DBOOST_ROOT=~/boost_1_77_0 -DYGM_REQUIRE_ARROW=ON
          make -j
      - name: Make test (mpich)
        if: matrix.mpi-type == 'mpich'
        run: |
          echo Run 'make test' with mpich, gcc-${{ matrix.gcc-version }}
          cd build
          ctest -VV -C ${{ env.BUILD_TYPE }}
      - name: Make test (OpenMPI)
        if: matrix.mpi-type == 'openmpi'
        run: |
          echo Run 'make test' with OpenMPI, gcc-${{ matrix.gcc-version }}
          cd build
          export OMPI_MCA_rmaps_base_oversubscribe=1
          ctest -VV -C ${{ env.BUILD_TYPE }}
